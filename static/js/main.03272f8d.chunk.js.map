{"version":3,"sources":["rules_display.js","translator.js","index.js"],"names":["RulesDisplay","props","state","data","localStorage","getItem","this","setState","JSON","parse","className","style","cursor","color","href","Object","keys","map","val","idx","Array","from","join","React","Component","Translator","addToRule","json","document","getElementById","value","prevRules","forEach","key","refSet","Set","add","setItem","stringify","transalte","hs","split","as","rules","title","Form","id","Label","Control","placeholder","defaultValue","Button","onClick","reorder","list","startIndex","endIndex","result","splice","removed","getItemStyle","isDragging","draggableStyle","isHindi","userSelect","padding","grid","margin","background","textAlign","App","add_to_localStorage","hindi_vals","querySelectorAll","d","push","innerText","trim","awadhi_vals","length","trans_map","i","window","location","reload","alert","clear_localStorage","copy_to_clipBoard","info_string","copy","clean","phrase","replace","prepare","hindi_phrase","awadhi_phrase","e","content","idNo","itemsLeft","itemsRight","merge","lang","target","left","Number","right","e1","e2","remove","console","error","showRules","showTranslator","onDragEndLeft","bind","onDragEndRight","destination","items","source","index","bsStyle","Group","type","onDragEnd","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","width","item","draggableId","draggableProps","dragHandleProps","ReactDOM","render"],"mappings":"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","file":"static/js/main.03272f8d.chunk.js","sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom';\n\nclass RulesDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n     \n        this.state = {\n          data: null,\n        };\n    }\n\n    componentDidMount() {\n        const data = localStorage.getItem(\"trans_map\");\n        if(data!==null) {\n            this.setState({data: JSON.parse(data)})\n        }\n    }\n\n    render() {\n       if(this.state.data!==null) {\n           return(\n               <div>\n                <div className=\"text-center my-5\">\n                    <h1>Hindi - Awadhi Translation Rules</h1>\n                    <a style={{cursor: \"pointer\", color: \"#f51010\"}} href=\"/\">back to home</a>\n                </div>\n                <ul>\n                    {\n                        Object.keys(this.state.data).map((val, idx) => {\n                        return(<li>{val} -> {Array.from(this.state.data[val]).join(\", \")}</li>);\n                        })\n                    }\n                </ul>\n               </div>\n           );\n       }\n       return (\n        <div className=\"text-center my-5\">\n            <h1>Hindi - Awadhi Translation Rules</h1>\n            <a style={{cursor: \"pointer\", color: \"#f51010\"}} href=\"/\">back to home</a>\n        </div>\n       )\n    }\n }\n export default RulesDisplay;","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport { Form, Button } from \"react-bootstrap\";\n\nclass Translator extends React.Component {\n    constructor(props) {\n        super(props);\n     \n        this.state = {\n          rules: null,\n          hs: null,\n          as: null\n        };\n    }\n\n    addToRule = () => {\n        const json = JSON.parse(document.getElementById(\"json_rule\").value);\n        let prevRules = JSON.parse(localStorage.getItem(\"trans_rules\"));\n        if(prevRules===null) {\n            prevRules = {};\n        }\n        Object.keys(json).forEach(key => {{}\n            if(key in prevRules) {\n                let refSet = new Set(prevRules[key]);\n                json[key].forEach(val => refSet.add(val));                \n                prevRules[key] = Array.from(refSet);\n            } else {\n                prevRules[key] = json[key];\n            }\n        });\n        localStorage.setItem(\"trans_rules\",JSON.stringify(prevRules));\n    }\n\n    transalte = () => {\n        let hs = document.getElementById(\"hindi_sentence\").value.split(\" \");\n        let as = hs.map((val) => {\n            if(val in this.state.rules)\n                return (<b style={{color: '#dc3545'}} title={val}>{this.state.rules[val][0]} </b>);\n            return (<span>{val} </span>);\n        });\n\n        hs = hs.map((val) => {\n            return (<span>{val} </span>);\n        });\n\n        this.setState({hs: hs, as: as});\n    }\n\n    render() {\n       if(this.state.rules!==null) {\n           return(\n               <div>\n                <div className=\"text-center my-5\">\n                    <h1>Hindi - Awadhi Translation Rules</h1>\n                    <a style={{cursor: \"pointer\", color: \"#f51010\"}} href=\"/\">back to home</a>\n                </div>\n                <div className=\"row d-flex justify-content-center\">\n                    <div className=\"col-6\">\n                        <Form id=\"translate_form\">\n                            <Form.Label>Enter Hindi sentence</Form.Label>\n                            <Form.Control id=\"hindi_sentence\" placeholder=\"\" defaultValue=\"तुम उसके लिए महान राजा के रूप में रहोगे और वह तुम्हारा अधिकृत वक्ता होगा।\"/>\n                        </Form>\n                    </div>\n                </div>\n                <div className=\"mt-3 row d-flex justify-content-center\">\n                    <div className=\"col-6 text-center\">\n                        <Button onClick={() => {this.transalte()}}>translate</Button>\n                    </div>\n                </div>\n                <div className=\"mt-3 row d-flex justify-content-center\">\n                    <div className=\"col-6 text-center\">\n                        {this.state.hs}\n                    </div>\n                </div>\n                <div className=\"mt-3 row d-flex justify-content-center\">\n                    <div className=\"col-6 text-center\">\n                        {this.state.as}\n                    </div>\n                </div>\n               </div>\n           );\n       }\n       return (\n        <div>\n            <div className=\"text-center my-5\">\n                <h1>Hindi - Awadhi Translator</h1>\n                <a style={{cursor: \"pointer\", color: \"#f51010\"}} href=\"/\">back to home</a>\n            </div>\n            <div className=\"row d-flex justify-content-center\">\n                <div className=\"col-8\">\n                    <Form>\n                        <Form.Label>Enter JSON rule</Form.Label>\n                        <Form.Control id=\"json_rule\" placeholder=\"\" defaultValue=\"\"/>\n                    </Form>\n                </div>\n            </div>\n            <div className=\"mt-4 row d-flex justify-content-center\">\n                <div className=\"col-2 text-center\">\n                    <Button onClick={() => {this.addToRule()}}>Add</Button>\n                </div>\n                <div className=\"col-2 text-center\">\n                    <Button onClick={() => {this.setState({rules: JSON.parse(localStorage.getItem(\"trans_rules\"))})}}className=\"btn-warning\">Start Translation</Button>\n                </div>\n            </div>\n        </div>\n       )\n    }\n }\n export default Translator;","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Form, Button } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport RulesDisplay from \"./rules_display.js\"\nimport Translator from \"./translator.js\"\n// import fs from \"fs\";\nimport copy from \"copy-to-clipboard\";\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle, isHindi) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 1,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"white\",\n  textAlign: isHindi? \"right\":\"left\",\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"#192746\" : \"#192746\",\n  padding: grid,\n  width: 250\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showRules: false,\n      showTranslator: false,\n      itemsLeft: [{id: 'empty - 0', content: \"empty\"}],\n      itemsRight: [{id: 'empty - 0', content: \"empty\"}]\n    };\n    this.onDragEndLeft = this.onDragEndLeft.bind(this);\n    this.onDragEndRight = this.onDragEndRight.bind(this);\n  }\n\n  onDragEndLeft(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      this.state.itemsLeft,\n      result.source.index,\n      result.destination.index\n    );\n\n    this.setState({\n      itemsLeft: items\n    });\n  }\n\n  onDragEndRight(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      this.state.itemsRight,\n      result.source.index,\n      result.destination.index\n    );\n\n    this.setState({\n      itemsRight: items\n    });\n  }\n\n  add_to_localStorage = () => {\n\n      let hindi_vals = []\n      document.querySelectorAll('.hindi-phrase').forEach((d)=>{\n          hindi_vals.push(d.innerText.split(\".\")[1].trim())\n      })\n\n      let awadhi_vals = []\n      document.querySelectorAll('.awadhi-phrase').forEach((d)=>{\n          awadhi_vals.push(d.innerText.split(\".\")[1].trim())\n      })\n\n    if(hindi_vals.length!==awadhi_vals.length) {\n      alert(\"mappings are not one to one\");\n      return;\n    }\n\n    let trans_map = JSON.parse(localStorage.getItem('trans_map'));\n//    console.log(trans_map)\n    if(trans_map===null){\n        trans_map = {}\n    }\n\n    for (let i=0;i<hindi_vals.length;i++){\n        if(hindi_vals[i] in trans_map) {\n            trans_map[hindi_vals[i]] = Array.from(new Set(trans_map[hindi_vals[i]]).add(awadhi_vals[i]));\n        }   else {\n            trans_map[hindi_vals[i]] = Array.from([awadhi_vals[i]])\n        }\n    }\n//    console.log(trans_map)\n    localStorage.setItem('trans_map', JSON.stringify(trans_map))\n//    console.log(JSON.parse(localStorage.getItem('trans_map')))\n      window.location.reload();\n  }\n\n  clear_localStorage = () => {\n     localStorage.setItem('trans_map', null)\n      alert(\"cleared local storage\");\n  }\n\n  copy_to_clipBoard = () => {\n     const info_string = localStorage.getItem('trans_map')\n     copy(info_string);\n     alert(\"copied to clipboard\");\n//     console.log(info_string)\n  }\n\n  clean = (phrase) => {\n    return phrase\n    .replace(/[।\"“”'.,/#!$%^&*;:{}=-_`~()]/g,\"\")\n    .replace(/\\s{2,}/g,\" \")\n    .trim();\n  }\n\n  prepare = (hindi_phrase, awadhi_phrase) => {\n    if(!hindi_phrase || !awadhi_phrase)\n      return;\n\n      hindi_phrase = this.clean(hindi_phrase);\n      awadhi_phrase = this.clean(awadhi_phrase);\n    \n    hindi_phrase = hindi_phrase.split(\" \").map((e,id) => {\n      return {\n        id: `hindi-phrase-${id}`,\n        content: e,\n        className: 'hindi-phrase',\n        idNo: id\n      }\n    });\n\n    awadhi_phrase = awadhi_phrase.split(\" \").map((e,id) => {\n      return {\n        id: `awadhi-phrase-${id}`,\n        content: e,\n        className: 'awadhi-phrase',\n        idNo: id\n      }\n    });\n\n    this.setState({\n      itemsLeft: hindi_phrase,\n      itemsRight: awadhi_phrase\n    });\n  }\n\n  merge = (e) => {\n    try {\n        let lang = e.target.id.split(\"_\")[0]\n        let left = Number(document.getElementById(`${lang}_phrase_merge_left`).value) - 1;\n        let right = Number(document.getElementById(`${lang}_phrase_merge_right`).value) -1 ;\n        let e1 = document.getElementById(`${lang}-phrase-${left}`);\n        let e2 = document.getElementById(`${lang}-phrase-${right}`);\n        e1.innerText = e1.innerText + \" \" + e2.innerText.split(\" \")[1]\n        e2.remove()\n    }\n    catch(e)\n        { console.error(e); }\n  }\n\n  render() {\n    if(this.state.showRules) {\n      return <RulesDisplay/>;\n    }\n\n    if(this.state.showTranslator) {\n      return <Translator/>;\n    }\n\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"text-center my-5\">\n            <h1>Hindi - Awadhi Translate</h1>\n            <Button bsStyle=\"danger\" className=\"btn-success\" onClick={()=>{this.setState({showRules: true})}}> click here to view your rules you have created so far</Button>\n            <br/>\n            <Button bsStyle=\"danger\" className=\"btn-info mt-3\" onClick={()=>{this.setState({showTranslator: true})}}> click here to view translator</Button>\n        </div>\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"col-5\">\n            <Form>\n              <Form.Group>\n                  <Form.Label className=\"text-danger\">Hindi Sentence/Phrase</Form.Label>\n                  <Form.Control id=\"hindi_phrase\" placeholder=\"Enter Hindi sentence/phrase\" defaultValue=\"याकूब के अपने वंश में सत्तर लोग थे।\"/>\n              </Form.Group>\n            </Form>\n          </div>\n          <div className=\"col-5\">\n            <Form>\n              <Form.Group>\n                  <Form.Label className=\"text-danger\">Awadhi Sentence/Phrase</Form.Label>\n                  <Form.Control id=\"awadhi_phrase\" placeholder=\"Enter Awadhi sentence/phrase\" defaultValue=\"याकूब क आपन सन्तानन मँ सत्तर लोग रहेन।\"/>\n              </Form.Group>\n            </Form>\n          </div>\n        </div>\n          <div className=\"row d-flex justify-content-center mb-3\">\n              <div className=\"col-3 justify-content-center\">\n                  <Button type=\"button\" className=\"btn btn-block \" onClick={()=>{this.prepare(document.getElementById(\"hindi_phrase\").value, document.getElementById(\"awadhi_phrase\").value)}}>Generate</Button>\n              </div>\n          </div>\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"offset-1 col-2\">\n            <Form>\n              <Form.Group>\n                  <Form.Control id=\"hindi_phrase_merge_left\" placeholder=\"Enter Index of left word\" />\n              </Form.Group>\n            </Form>\n          </div>\n          <div className=\"col-2\">\n            <Form>\n              <Form.Group>\n                <Form.Control id=\"hindi_phrase_merge_right\" placeholder=\"Enter index of right word\" />\n              </Form.Group>\n            </Form>\n          </div>\n          <div className=\"col-1\">\n            <Button className=\"btn-dark\" id=\"hindi_merge\" onClick={this.merge}>Merge</Button>\n          </div>\n\n\n          <div className=\"col-2\">\n            <Form>\n              <Form.Group>\n                  <Form.Control id=\"awadhi_phrase_merge_left\" placeholder=\"Enter Index of left word\" />\n              </Form.Group>\n            </Form>\n          </div>\n          <div className=\"col-2\">\n            <Form>\n              <Form.Group>\n                <Form.Control id=\"awadhi_phrase_merge_right\" placeholder=\"Enter index of right word\" />\n              </Form.Group>\n            </Form>\n          </div>\n\n          <div className=\"col-2\">\n            <Button className=\"btn-dark\" id=\"awadhi_merge\" onClick={this.merge}>Merge</Button>\n          </div>\n        </div>\n        <div className=\"row d-flex mb-5\">\n          <div className=\"col-6 d-flex justify-content-end\">\n            <DragDropContext onDragEnd={this.onDragEndLeft}>\n              <Droppable droppableId=\"droppable\">\n                {(provided, snapshot) => (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={getListStyle(snapshot.isDraggingOver)}\n                  >\n                    {this.state.itemsLeft.map((item, index) => (\n                      <Draggable key={item.id} draggableId={item.id} index={index}>\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            className={item.className}\n                            id={item.id}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style,\n                              true\n                            )}\n                          >\n                           {item.idNo +1}.       {item.content}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n          <div className=\"col-6 d-flex justify-content-left\">\n            <DragDropContext onDragEnd={this.onDragEndRight}>\n              <Droppable droppableId=\"droppable\">\n                {(provided, snapshot) => (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={getListStyle(snapshot.isDraggingOver)}\n                  >\n                    {this.state.itemsRight.map((item, index) => (\n                      <Draggable key={item.id} draggableId={item.id} index={index}>\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            className={item.className}\n                            id={item.id}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style\n                            )}\n                          >\n                            {item.idNo +1}.    {item.content}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n        </div>\n        <div className=\"row d-flex justify-content-center mb-3\">\n            <div className=\"col-3 justify-content-center \">\n                <Button className=\"btn-block\" id=\"hindi_merge\" onClick={this.clear_localStorage}>Clear Localstorage</Button>\n            </div>\n            <div className=\"col-3 justify-content-center \">\n                <Button className=\"btn-block\" id=\"hindi_merge\" onClick={this.add_to_localStorage}>Add To Localstorage</Button>\n            </div>\n            <div className=\"col-3 justify-content-center \">\n                <Button className=\"btn-block\" id=\"hindi_merge\" onClick={this.copy_to_clipBoard}>Copy To Clipboard</Button>\n            </div>\n         </div>\n      </div>\n    );\n  }\n}\n\n// Put the thing into the DOM!\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n"],"sourceRoot":""}