{"version":3,"sources":["rules_display.js","index.js"],"names":["RulesDisplay","props","state","data","localStorage","getItem","this","setState","JSON","parse","className","style","cursor","color","href","Object","keys","map","val","idx","Array","from","join","React","Component","reorder","list","startIndex","endIndex","result","splice","removed","getItemStyle","isDragging","draggableStyle","isHindi","userSelect","padding","grid","margin","background","textAlign","App","add_to_localStorage","hindi_vals","document","querySelectorAll","forEach","d","push","innerText","split","trim","awadhi_vals","length","trans_map","i","Set","add","setItem","stringify","window","location","reload","alert","clear_localStorage","copy_to_clipBoard","info_string","copy","clean","phrase","replace","prepare","hindi_phrase","awadhi_phrase","e","id","content","idNo","itemsLeft","itemsRight","merge","lang","target","left","Number","getElementById","value","right","e1","e2","remove","console","error","showRules","onDragEndLeft","bind","onDragEndRight","destination","items","source","index","Button","bsStyle","onClick","Form","Group","Label","Control","placeholder","defaultValue","type","onDragEnd","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","width","item","key","draggableId","draggableProps","dragHandleProps","ReactDOM","render"],"mappings":"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","file":"static/js/main.c74b7dd2.chunk.js","sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom';\n\nclass RulesDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n     \n        this.state = {\n          data: null,\n        };\n    }\n\n    componentDidMount() {\n        const data = localStorage.getItem(\"trans_map\");\n        if(data!==null) {\n            this.setState({data: JSON.parse(data)})\n        }\n    }\n\n    render() {\n       if(this.state.data!==null) {\n           return(\n               <div>\n                <div className=\"text-center my-5\">\n                    <h1>Hindi - Awadhi Translation Rules</h1>\n                    <a style={{cursor: \"pointer\", color: \"#f51010\"}} href=\"https://shikhar-scs.github.io/hindi-awadhi-translate/\">back to home</a>\n                </div>\n                <ul>\n                    {\n                        Object.keys(this.state.data).map((val, idx) => {\n                        return(<li>{val} -> {Array.from(this.state.data[val]).join(\", \")}</li>);\n                        })\n                    }\n                </ul>\n               </div>\n           );\n       }\n       return (\n        <div className=\"text-center my-5\">\n            <h1>Hindi - Awadhi Translation Rules</h1>\n            <a style={{cursor: \"pointer\", color: \"#f51010\"}} href=\"https://shikhar-scs.github.io/hindi-awadhi-translate/\">back to home</a>\n        </div>\n       )\n    }\n }\n export default RulesDisplay;","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Form, Button } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport RulesDisplay from \"./rules_display.js\"\n// import fs from \"fs\";\nimport copy from \"copy-to-clipboard\";\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle, isHindi) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 1,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"white\",\n  textAlign: isHindi? \"right\":\"left\",\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"#192746\" : \"#192746\",\n  padding: grid,\n  width: 250\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showRules: false,\n      itemsLeft: [{id: 'empty - 0', content: \"empty\"}],\n      itemsRight: [{id: 'empty - 0', content: \"empty\"}]\n    };\n    this.onDragEndLeft = this.onDragEndLeft.bind(this);\n    this.onDragEndRight = this.onDragEndRight.bind(this);\n  }\n\n  onDragEndLeft(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      this.state.itemsLeft,\n      result.source.index,\n      result.destination.index\n    );\n\n    this.setState({\n      itemsLeft: items\n    });\n  }\n\n  onDragEndRight(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      this.state.itemsRight,\n      result.source.index,\n      result.destination.index\n    );\n\n    this.setState({\n      itemsRight: items\n    });\n  }\n\n  add_to_localStorage = () => {\n\n      let hindi_vals = []\n      document.querySelectorAll('.hindi-phrase').forEach((d)=>{\n          hindi_vals.push(d.innerText.split(\".\")[1].trim())\n      })\n\n      let awadhi_vals = []\n      document.querySelectorAll('.awadhi-phrase').forEach((d)=>{\n          awadhi_vals.push(d.innerText.split(\".\")[1].trim())\n      })\n\n    if(hindi_vals.length!==awadhi_vals.length) {\n      alert(\"mappings are not one to one\");\n      return;\n    }\n\n    let trans_map = JSON.parse(localStorage.getItem('trans_map'));\n//    console.log(trans_map)\n    if(trans_map===null){\n        trans_map = {}\n    }\n\n    for (let i=0;i<hindi_vals.length;i++){\n        if(hindi_vals[i] in trans_map) {\n            trans_map[hindi_vals[i]] = Array.from(new Set(trans_map[hindi_vals[i]]).add(awadhi_vals[i]));\n        }   else {\n            trans_map[hindi_vals[i]] = Array.from([awadhi_vals[i]])\n        }\n    }\n//    console.log(trans_map)\n    localStorage.setItem('trans_map', JSON.stringify(trans_map))\n//    console.log(JSON.parse(localStorage.getItem('trans_map')))\n      window.location.reload();\n  }\n\n  clear_localStorage = () => {\n     localStorage.setItem('trans_map', null)\n      alert(\"cleared local storage\");\n  }\n\n  copy_to_clipBoard = () => {\n     const info_string = localStorage.getItem('trans_map')\n     copy(info_string);\n     alert(\"copied to clipboard\");\n//     console.log(info_string)\n  }\n\n  clean = (phrase) => {\n    return phrase\n    .replace(/[।\"“”'.,/#!$%^&*;:{}=-_`~()]/g,\"\")\n    .replace(/\\s{2,}/g,\" \")\n    .trim();\n  }\n\n  prepare = (hindi_phrase, awadhi_phrase) => {\n    if(!hindi_phrase || !awadhi_phrase)\n      return;\n\n      hindi_phrase = this.clean(hindi_phrase);\n      awadhi_phrase = this.clean(awadhi_phrase);\n    \n    hindi_phrase = hindi_phrase.split(\" \").map((e,id) => {\n      return {\n        id: `hindi-phrase-${id}`,\n        content: e,\n        className: 'hindi-phrase',\n        idNo: id\n      }\n    });\n\n    awadhi_phrase = awadhi_phrase.split(\" \").map((e,id) => {\n      return {\n        id: `awadhi-phrase-${id}`,\n        content: e,\n        className: 'awadhi-phrase',\n        idNo: id\n      }\n    });\n\n    this.setState({\n      itemsLeft: hindi_phrase,\n      itemsRight: awadhi_phrase\n    });\n  }\n\n  merge = (e) => {\n    try {\n        let lang = e.target.id.split(\"_\")[0]\n        let left = Number(document.getElementById(`${lang}_phrase_merge_left`).value) - 1;\n        let right = Number(document.getElementById(`${lang}_phrase_merge_right`).value) -1 ;\n        let e1 = document.getElementById(`${lang}-phrase-${left}`);\n        let e2 = document.getElementById(`${lang}-phrase-${right}`);\n        e1.innerText = e1.innerText + \" \" + e2.innerText.split(\" \")[1]\n        e2.remove()\n    }\n    catch(e)\n        { console.error(e); }\n  }\n\n  render() {\n    if(this.state.showRules) {\n      return <RulesDisplay/>;\n    }\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"text-center my-5\">\n            <h1>Hindi - Awadhi Translate</h1>\n            <Button bsStyle=\"danger\" className=\"btn-warning\" onClick={()=>{this.setState({showRules: true})}}> click here to view your rules you have created so far </Button>\n        </div>\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"col-5\">\n            <Form>\n              <Form.Group>\n                  <Form.Label className=\"text-danger\">Hindi Sentence/Phrase</Form.Label>\n                  <Form.Control id=\"hindi_phrase\" placeholder=\"Enter Hindi sentence/phrase\" defaultValue=\"याकूब के अपने वंश में सत्तर लोग थे।\"/>\n              </Form.Group>\n            </Form>\n          </div>\n          <div className=\"col-5\">\n            <Form>\n              <Form.Group>\n                  <Form.Label className=\"text-danger\">Awadhi Sentence/Phrase</Form.Label>\n                  <Form.Control id=\"awadhi_phrase\" placeholder=\"Enter Awadhi sentence/phrase\" defaultValue=\"याकूब क आपन सन्तानन मँ सत्तर लोग रहेन।\"/>\n              </Form.Group>\n            </Form>\n          </div>\n        </div>\n          <div className=\"row d-flex justify-content-center mb-3\">\n              <div className=\"col-3 justify-content-center\">\n                  <Button type=\"button\" className=\"btn btn-block \" onClick={()=>{this.prepare(document.getElementById(\"hindi_phrase\").value, document.getElementById(\"awadhi_phrase\").value)}}>Generate</Button>\n              </div>\n          </div>\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"offset-1 col-2\">\n            <Form>\n              <Form.Group>\n                  <Form.Control id=\"hindi_phrase_merge_left\" placeholder=\"Enter Index of left word\" />\n              </Form.Group>\n            </Form>\n          </div>\n          <div className=\"col-2\">\n            <Form>\n              <Form.Group>\n                <Form.Control id=\"hindi_phrase_merge_right\" placeholder=\"Enter index of right word\" />\n              </Form.Group>\n            </Form>\n          </div>\n          <div className=\"col-1\">\n            <Button className=\"btn-dark\" id=\"hindi_merge\" onClick={this.merge}>Merge</Button>\n          </div>\n\n\n          <div className=\"col-2\">\n            <Form>\n              <Form.Group>\n                  <Form.Control id=\"awadhi_phrase_merge_left\" placeholder=\"Enter Index of left word\" />\n              </Form.Group>\n            </Form>\n          </div>\n          <div className=\"col-2\">\n            <Form>\n              <Form.Group>\n                <Form.Control id=\"awadhi_phrase_merge_right\" placeholder=\"Enter index of right word\" />\n              </Form.Group>\n            </Form>\n          </div>\n\n          <div className=\"col-2\">\n            <Button className=\"btn-dark\" id=\"awadhi_merge\" onClick={this.merge}>Merge</Button>\n          </div>\n        </div>\n        <div className=\"row d-flex mb-5\">\n          <div className=\"col-6 d-flex justify-content-end\">\n            <DragDropContext onDragEnd={this.onDragEndLeft}>\n              <Droppable droppableId=\"droppable\">\n                {(provided, snapshot) => (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={getListStyle(snapshot.isDraggingOver)}\n                  >\n                    {this.state.itemsLeft.map((item, index) => (\n                      <Draggable key={item.id} draggableId={item.id} index={index}>\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            className={item.className}\n                            id={item.id}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style,\n                              true\n                            )}\n                          >\n                           {item.idNo +1}.       {item.content}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n          <div className=\"col-6 d-flex justify-content-left\">\n            <DragDropContext onDragEnd={this.onDragEndRight}>\n              <Droppable droppableId=\"droppable\">\n                {(provided, snapshot) => (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={getListStyle(snapshot.isDraggingOver)}\n                  >\n                    {this.state.itemsRight.map((item, index) => (\n                      <Draggable key={item.id} draggableId={item.id} index={index}>\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            className={item.className}\n                            id={item.id}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style\n                            )}\n                          >\n                            {item.idNo +1}.    {item.content}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n        </div>\n        <div className=\"row d-flex justify-content-center mb-3\">\n            <div className=\"col-3 justify-content-center \">\n                <Button className=\"btn-block\" id=\"hindi_merge\" onClick={this.clear_localStorage}>Clear Localstorage</Button>\n            </div>\n            <div className=\"col-3 justify-content-center \">\n                <Button className=\"btn-block\" id=\"hindi_merge\" onClick={this.add_to_localStorage}>Add To Localstorage</Button>\n            </div>\n            <div className=\"col-3 justify-content-center \">\n                <Button className=\"btn-block\" id=\"hindi_merge\" onClick={this.copy_to_clipBoard}>Copy To Clipboard</Button>\n            </div>\n         </div>\n      </div>\n    );\n  }\n}\n\n// Put the thing into the DOM!\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n"],"sourceRoot":""}